services:
  asp_rest_api:
    image: asp_rest_api_image
    build:
      context: .
      dockerfile: ./ASP_Rest_API/Dockerfile
    ports:
     - "8080:8080"
     #- "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080 # Stellt sicher, dass nur HTTP verwendet wird
    depends_on:
      - tododal
      - rabbitmq

  webui:
    image: web_ui_image
    build:
      context: ./WebUI
      dockerfile: Dockerfile
    ports:
     - "80:80"
    volumes:
      - ./WebUI/nginx.conf:/etc/nginx/nginx.conf  # Binde die Nginx-Konfigurationsdatei ein
      - ./WebUI/wwwroot:/app/wwwroot  # Statische Dateien mounten
    depends_on:
      - asp_rest_api
   
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Binde das Volume für persistente Datenspeicherung ein

  tododal:
    image: tododal_image
    build:
      context: .
      dockerfile: ./TodoDAL/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

volumes:
    postgres_data:  # Definiertes Volume für persistente Datenspeicherung von PostgreSQL